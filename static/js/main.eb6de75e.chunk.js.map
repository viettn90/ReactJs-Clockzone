{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["FormattedDate","props","namelocate","date","Clock","state","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleString","timeZone","React","Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAAe,MAA0B,iC,MCKzC,SAASA,EAAcC,GACrB,OACE,8BACE,wCAAWA,EAAMC,WAAjB,IAA8BD,EAAME,KAApC,S,IAMAC,E,kDACJ,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CAACF,KAAM,IAAIG,MAFP,E,gEAKE,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,6CAKFC,cAAcJ,KAAKC,W,6BAInBD,KAAKK,SAAS,CACZT,KAAM,IAAIG,S,+BAKZ,OACE,gCACE,+CACA,cAACN,EAAD,CAAeE,WAAW,gBAAgBC,KAAMI,KAAKF,MAAMF,KAAKU,mBAChE,cAACb,EAAD,CAAeE,WAAW,2BAA2BC,KAAMI,KAAKF,MAAMF,KAAKU,eAAe,QAAS,CAAEC,SAAU,iC,GA5BnGC,IAAMC,WA4DXC,MAzBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oBAAIH,UAAU,YAAd,4CAGF,sCACS,8CADT,0BAGE,mBACEA,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAAC,EAAD,QCxDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb6de75e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction FormattedDate(props) {\n  return (\n    <div>\n      <h2>It is {props.namelocate} {props.date}.</h2>\n      \n    </div>\n  )\n}\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <FormattedDate namelocate='Viet Nam time' date={this.state.date.toLocaleString()} />\n        <FormattedDate namelocate='America/Los_Angeles time' date={this.state.date.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' })} />\n        \n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">Welcome to My React Project</h1>\n        \n      </header>\n      <p>\n          Edit <code>src/App.js</code> and save to reload.\n      </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <Clock />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}